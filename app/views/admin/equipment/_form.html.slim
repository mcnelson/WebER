= simple_nested_form_for [:admin, @equipment], html: { class: "form-horizontal" } do |f|
  = form_errors @equipment

  .row
    .span6
      .gasket
        h2 Properties

        .form-inputs
          = f.input :name
          = f.association :category, collection: Category.grouped_select_options, as: :grouped_select, group_method: :first, group_label_method: :last
          = f.input :photo

          = f.input :brand
          = f.input :model
          = f.input :serial, label: "Serial #"
          = f.input :accessory, hint: "Is this equipment an accessory?"

          h2 Accessory Dependencies

          = f.fields_for :accessory_dependencies do |g|
            = g.association :accessory_category, collection: AccessoryCategory.all, label: "Dependant Accessory Category", hint: "Make this unit depend on any accessory within this accessory category", label_method: :title
            = g.input :optional
            = g.link_to_remove class: "btn btn-inverse btn-mini" do
              span.icon: i.icon-minus
              |  Remove

          = f.link_to_add :accessory_dependencies, class: "btn btn-mini" do
            span.icon: i.icon-plus
            |  Add

    .span6
      .gasket
        h2 Administrative Settings
        .form-inputs
          = f.input :active, hint: "Available for checkout?"
          = f.input :status, collection: Equipment::STATUSES, as: :radio_buttons, label_method: :capitalize
          = f.input :max_reservation_period, hint: "Leave blank to use the default (#{distance_of_time_in_words Weber::Application.config.default_max_reservation_period})"
          = f.input :notes, input_html: { rows: 2 }

  .form-actions
    .btn-group
      = f.button :submit, class: "btn-primary"
      = link_to 'Show', [:admin, @equipment], class: "btn" if @equipment.persisted?
      = link_to 'Back', admin_equipment_index_path, class: "btn"

- content_for :js do
  coffee:
    weber.equipment.form.init()
